---
- name: Setup Indicum Service
  hosts: your_target_hosts
  become: yes  # Use sudo for tasks that require root privileges
  vars_prompt:
    - name: token
      prompt: "Enter the token"
      private: no  # Do not hide the input

  tasks:
    - name: Clone the indicum-package repository
      ansible.builtin.git:
        repo: 'https://github.com/indicum-package.git'
        dest: '/opt/indicum-package'
        clone: yes
        update: yes
      register: git_clone

    - name: Generate RSA private key
      community.crypto.openssh_keypair:
        path: /etc/indicum/priv_key.pem
        type: rsa
        size: 2048
      register: rsa_keys

    - name: Ensure /etc/indicum/ directory exists
      ansible.builtin.file:
        path: /etc/indicum/
        state: directory
        mode: '0755'
      when: rsa_keys.changed

    - name: Send API POST request with token and public key
      ansible.builtin.uri:
        url: http://yourapiendpoint/map-token-pub-key
        method: POST
        body_format: json
        body: "{{ {'token': token, 'public_key': rsa_keys.public_key } }}"
        headers:
          Content-Type: "application/json"

    - name: Copy indicum.service to systemd system folder
      ansible.builtin.copy:
        src: "/opt/indicum-package/indicum.service"  # Adjust this path if indicum.service is located in a subdirectory of the repo
        dest: "/etc/systemd/system/indicum.service"
      when: git_clone.changed
      notify: reload systemd

    - name: Ensure indicum service is enabled and running
      ansible.builtin.systemd:
        name: indicum
        state: started
        enabled: yes

  handlers:
    - name: reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes


# pass in token as argument into playbook

# git clone a repo github.com/indicum-package

# generate private RSA 2048 bit key and save to /etc/indicum/priv_key.pem

# generate public RSA key and pem encode it

# send an API POST request to /map-token-pub-key with token and public key in json format

# create a systemctl service called indicum where the script (run-on-device.sh) is constantly run and restarted if it ever fails